<div id="dropzone" class="center">
    <div>
        <h3> Add new data items to GeoLibrary</h3>
        <ol>
            <li>Drag and drop zip files or click Dropzone for file selection</li>
            <li>Once file is selected the workflow process will process data</li>
            <li>The result will be a populated form that has been crosswalked from available xml metadata</li>
            <li> Click generate schema</li>
            <li> Dialog box populated with geoblacklight schema.</li>
            <li> Double check metadata save and index data</li>
        </ol>
    </div>
  <form id="dropzone1" action="/api/upload/" class="dropzone needsclick" >
    <div style="display:none">
      <input type="hidden" name="csrfmiddlewaretoken" value="{{ csrftoken }}"/>
    </div>
    <div style="display:none">
      <input type="hidden" name="callback" value="{{ task }}"/>
    </div>
    <div style="display:none">
      <input type="hidden" name="tags" value="{{ tags }}"/>
    </div>
    <div class="dz-message needsclick center">
      <strong>Drop zip files here or click to upload.</strong>
    </div>
  </form>
</div>
<script>
      Dropzone.autoDiscover = false;
      $("#dropzone1").dropzone({
          url: "/api/upload/",
          maxFilesize: 10000,
          uploadMultiple: false,
          addRemoveLinks: true,
          acceptedFiles: ".zip",
          init: function() {
            this.on("complete", function(file) {
              this.removeFile(file);
            });
            this.on("success",function(file,response){
              console.log(response);
              load_task_history(user_task_url);
              showChildResult(response[0].callback.response.result_url);
            });
            this.on("error", function(file){
              if (!file.accepted){alert("File must be a zipfile.");}
              this.removeFile(file);
            });
          }
      });
</script>
